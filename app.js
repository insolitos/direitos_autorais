// Dados da aplica√ß√£o
const dadosApp = {
    licencas_creative_commons: [
        {
            nome: "CC0 (Dom√≠nio P√∫blico)",
            descricao: "Ren√∫ncia total aos direitos. Pode usar a obra para qualquer finalidade sem atribui√ß√£o.",
            cor: "#EF9421",
            icone: "üåê",
            detalhe: "Permite uso comercial e adapta√ß√µes. N√£o requer atribui√ß√£o."
        },
        {
            nome: "CC BY (Atribui√ß√£o)",
            descricao: "Permite qualquer uso desde que seja dado cr√©dito ao autor original.",
            cor: "#AADB1E",
            icone: "üë§",
            detalhe: "Permite uso comercial e adapta√ß√µes. Requer atribui√ß√£o."
        },
        {
            nome: "CC BY-SA (Atribui√ß√£o-CompartilhaIgual)",
            descricao: "Permite qualquer uso desde que seja dado cr√©dito e que novas cria√ß√µes tenham a mesma licen√ßa.",
            cor: "#3C7D98",
            icone: "üîÑ",
            detalhe: "Permite uso comercial. Requer atribui√ß√£o e licenciar derivados com a mesma licen√ßa."
        },
        {
            nome: "CC BY-ND (Atribui√ß√£o-SemDeriva√ß√µes)",
            descricao: "Permite redistribui√ß√£o, comercial ou n√£o-comercial, desde que a obra seja distribu√≠da inalterada e completa, com cr√©dito ao autor.",
            cor: "#9C5BB5",
            icone: "üö´",
            detalhe: "Permite uso comercial. Requer atribui√ß√£o. N√£o permite deriva√ß√µes."
        },
        {
            nome: "CC BY-NC (Atribui√ß√£o-N√£oComercial)",
            descricao: "Permite adapta√ß√µes desde que seja dado cr√©dito e que o uso n√£o seja comercial.",
            cor: "#FB7729",
            icone: "üí∞",
            detalhe: "N√£o permite uso comercial. Requer atribui√ß√£o. Permite deriva√ß√µes."
        },
        {
            nome: "CC BY-NC-SA (Atribui√ß√£o-N√£oComercial-CompartilhaIgual)",
            descricao: "Permite adapta√ß√µes n√£o comerciais desde que seja dado cr√©dito e que novas cria√ß√µes tenham a mesma licen√ßa.",
            cor: "#6A3997",
            icone: "üîÑüí∞",
            detalhe: "N√£o permite uso comercial. Requer atribui√ß√£o e licenciar derivados com a mesma licen√ßa."
        },
        {
            nome: "CC BY-NC-ND (Atribui√ß√£o-SemDeriva√ß√µes-SemDerivados)",
            descricao: "A mais restritiva das licen√ßas CC. Permite download e partilha desde que seja dado cr√©dito, mas n√£o permite altera√ß√µes ou uso comercial.",
            cor: "#CD3B3B",
            icone: "üö´üí∞",
            detalhe: "N√£o permite uso comercial nem deriva√ß√µes. Requer atribui√ß√£o."
        }
    ],
    bancos_imagens: [
        {
            nome: "Pixabay",
            url: "#",
            descricao: "Imagens de alta qualidade totalmente gratuitas, livres de direitos autorais.",
            licenca: "Licen√ßa Pixabay (similar a CC0)",
            icone: "üñºÔ∏è",
            imagem: "https://images.unsplash.com/photo-1516321497487-e288fb19713f?w=400&h=250&fit=crop"
        },
        {
            nome: "Unsplash",
            url: "#",
            descricao: "Fotografias de alta resolu√ß√£o gratuitas. Todas as imagens s√£o livres de direitos autorais.",
            licenca: "Licen√ßa Unsplash (similar a CC0)",
            icone: "üì∑",
            imagem: "https://images.unsplash.com/photo-1452457807411-4979b707c5be?w=400&h=250&fit=crop"
        },
        {
            nome: "Pexels",
            url: "#",
            descricao: "Fotos e v√≠deos gratuitos de alta qualidade partilhados por criadores talentosos.",
            licenca: "Licen√ßa Pexels (similar a CC0)",
            icone: "üì∏",
            imagem: "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=250&fit=crop"
        },
        {
            nome: "Reshot",
            url: "#",
            descricao: "Imagens de alta qualidade, gratuitas e livres de direitos autorais.",
            licenca: "Licen√ßa gratuita sem atribui√ß√£o",
            icone: "üéûÔ∏è",
            imagem: "https://images.unsplash.com/photo-1502920917128-1aa500764cbd?w=400&h=250&fit=crop"
        },
        {
            nome: "Google Imagens",
            url: "#",
            descricao: "Use os filtros de direitos de utiliza√ß√£o para encontrar imagens que pode usar legalmente.",
            licenca: "Varia conforme a imagem",
            icone: "üîç",
            imagem: "https://images.unsplash.com/photo-1555066931-4365d14bab8c?w=400&h=250&fit=crop"
        },
        {
            nome: "Wikimedia Commons",
            url: "#",
            descricao: "Reposit√≥rio de m√≠dia livre que qualquer pessoa pode usar ou contribuir.",
            licenca: "Varia (geralmente CC)",
            icone: "üìö",
            imagem: "https://images.unsplash.com/photo-1481627834876-b7833e8f5570?w=400&h=250&fit=crop"
        },
        {
            nome: "Creative Commons Search",
            url: "#",
            descricao: "Ferramenta para procurar em diversas fontes por conte√∫do licenciado sob Creative Commons.",
            licenca: "Varia (sempre Creative Commons)",
            icone: "üîé",
            imagem: "https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=400&h=250&fit=crop"
        }
    ],
    praticas: [
        {
            titulo: "Verificar sempre a licen√ßa",
            descricao: "Antes de usar qualquer imagem, verifique que tipo de licen√ßa ela possui e quais as permiss√µes/restri√ß√µes.",
            icone: "‚úÖ"
        },
        {
            titulo: "Atribuir corretamente",
            descricao: "Inclua o nome do autor, t√≠tulo da obra (se dispon√≠vel) e o tipo de licen√ßa.",
            icone: "üë§"
        },
        {
            titulo: "Respeitar as restri√ß√µes",
            descricao: "Se a licen√ßa n√£o permite uso comercial ou modifica√ß√µes, respeite essas limita√ß√µes.",
            icone: "üö´"
        },
        {
            titulo: "Manter a atribui√ß√£o vis√≠vel",
            descricao: "Coloque as atribui√ß√µes em local vis√≠vel, geralmente pr√≥ximo √† imagem ou no final do documento.",
            icone: "üëÅÔ∏è"
        },
        {
            titulo: "Documentar as fontes",
            descricao: "Mantenha um registo das fontes de todas as imagens utilizadas nos seus materiais did√°ticos.",
            icone: "üìù"
        },
        {
            titulo: "Usar ferramentas de busca inversa",
            descricao: "Quando n√£o tiver certeza da origem, use ferramentas como Google Images ou TinEye para verificar.",
            icone: "üîç"
        }
    ],
    perguntas_quiz: [
        {
            pergunta: "Qual das seguintes licen√ßas Creative Commons permite uso comercial sem necessidade de atribui√ß√£o?",
            opcoes: [
                "CC BY (Atribui√ß√£o)",
                "CC0 (Dom√≠nio P√∫blico)",
                "CC BY-NC (Atribui√ß√£o-N√£oComercial)",
                "CC BY-SA (Atribui√ß√£o-CompartilhaIgual)"
            ],
            resposta_correta: 1,
            explicacao: "A licen√ßa CC0 (Dom√≠nio P√∫blico) √© a √∫nica que permite uso comercial sem necessidade de atribui√ß√£o, pois o autor renuncia a todos os seus direitos."
        },
        {
            pergunta: "Um professor pode usar qualquer imagem da internet para fins educacionais sem se preocupar com direitos autorais?",
            opcoes: [
                "Sim, desde que seja para uso educacional",
                "Sim, mas apenas em escolas p√∫blicas",
                "N√£o, o uso educacional tem algumas exce√ß√µes mas ainda deve respeitar direitos autorais",
                "N√£o, nunca se pode usar imagens da internet em contexto educacional"
            ],
            resposta_correta: 2,
            explicacao: "Mesmo para fins educacionais, √© necess√°rio respeitar os direitos autorais. Existem algumas exce√ß√µes e flexibilidades para uso educacional, mas n√£o √© uma carta branca para usar qualquer imagem sem autoriza√ß√£o."
        },
        {
            pergunta: "Qual das seguintes situa√ß√µes constitui um uso correto de uma imagem com licen√ßa CC BY?",
            opcoes: [
                "Usar a imagem sem qualquer atribui√ß√£o",
                "Usar a imagem e atribuir o autor, mas proibir que outros a utilizem",
                "Usar a imagem para fins comerciais, desde que atribuindo o autor",
                "Usar a imagem apenas para fins n√£o comerciais"
            ],
            resposta_correta: 2,
            explicacao: "A licen√ßa CC BY permite qualquer uso, incluindo comercial, desde que seja atribu√≠do cr√©dito ao autor original da obra."
        },
        {
            pergunta: "Quais das seguintes fontes oferecem imagens totalmente livres para uso, sem necessidade de atribui√ß√£o?",
            opcoes: [
                "Todas as imagens do Google Imagens",
                "Pixabay, Unsplash e Pexels",
                "Qualquer imagem compartilhada nas redes sociais",
                "Apenas imagens marcadas explicitamente como 'sem direitos autorais'"
            ],
            resposta_correta: 1,
            explicacao: "Pixabay, Unsplash e Pexels s√£o bancos de imagens que oferecem conte√∫do sob licen√ßas que n√£o requerem atribui√ß√£o (similares a CC0), embora a atribui√ß√£o seja apreciada."
        },
        {
            pergunta: "Ao encontrar uma imagem sem informa√ß√£o clara sobre a licen√ßa, o que deve fazer?",
            opcoes: [
                "Presumir que est√° em dom√≠nio p√∫blico e usar livremente",
                "Usar a imagem e atribuir 'Autor Desconhecido'",
                "Presumir que tem direitos autorais e evitar us√°-la sem autoriza√ß√£o",
                "Usar apenas para fins educacionais, pois h√° sempre esta exce√ß√£o"
            ],
            resposta_correta: 2,
            explicacao: "Na aus√™ncia de informa√ß√£o clara sobre a licen√ßa, deve-se presumir que a imagem est√° protegida por direitos autorais e, portanto, n√£o deve ser usada sem autoriza√ß√£o do autor ou detentor dos direitos."
        },
        {
            pergunta: "Qual √© a forma correta de atribuir uma imagem com licen√ßa CC BY-SA?",
            opcoes: [
                "N√£o √© necess√°rio atribuir, apenas compartilhar com a mesma licen√ßa",
                "Basta mencionar que a imagem tem licen√ßa Creative Commons",
                "Mencionar o autor e o tipo de licen√ßa, e compartilhar derivados com a mesma licen√ßa",
                "Pagar uma taxa de licenciamento ao autor original"
            ],
            resposta_correta: 2,
            explicacao: "Para imagens com licen√ßa CC BY-SA, √© necess√°rio atribuir o autor original, mencionar o tipo de licen√ßa e garantir que qualquer obra derivada seja compartilhada sob a mesma licen√ßa."
        },
        {
            pergunta: "Em Portugal, qual destas pr√°ticas √© permitida no contexto educacional?",
            opcoes: [
                "Reproduzir livros inteiros para distribuir aos alunos",
                "Usar pequenos excertos ou imagens de obras para fins de cita√ß√£o, cr√≠tica ou ensino",
                "Modificar livremente qualquer imagem para uso em sala de aula",
                "Ignorar completamente os direitos autorais se o uso for educacional"
            ],
            resposta_correta: 1,
            explicacao: "A legisla√ß√£o portuguesa, em linha com a europeia, permite o uso de pequenos excertos de obras protegidas para fins de cita√ß√£o, cr√≠tica ou ensino, desde que a fonte seja indicada. No entanto, n√£o permite a reprodu√ß√£o integral ou usos que prejudiquem a explora√ß√£o normal da obra."
        }
    ]
};

// Fun√ß√£o para inicializar a aplica√ß√£o quando o DOM estiver pronto
document.addEventListener('DOMContentLoaded', function() {
    // Inicializar as tabs
    setupTabs();
    
    // Renderizar os conte√∫dos din√¢micos
    renderLicensas();
    renderBancosImagens();
    renderPraticas();
    setupAccordions();
    
    // Inicializar o quiz
    initQuiz();
});

// Configura√ß√£o das tabs
function setupTabs() {
    const tabButtons = document.querySelectorAll('.tab-button');
    
    tabButtons.forEach(button => {
        button.addEventListener('click', () => {
            // Remover a classe 'active' de todos os bot√µes e conte√∫dos
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active');
            });
            
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.remove('active');
            });
            
            // Adicionar a classe 'active' ao bot√£o clicado e ao conte√∫do correspondente
            button.classList.add('active');
            const tabId = button.getAttribute('data-tab');
            document.getElementById(tabId).classList.add('active');
        });
    });
}

// Renderizar as licen√ßas Creative Commons
function renderLicensas() {
    const licenseContainer = document.getElementById('license-container');
    
    dadosApp.licencas_creative_commons.forEach(licenca => {
        const licenseCard = document.createElement('div');
        licenseCard.className = 'license-card';
        
        licenseCard.innerHTML = `
            <div class="license-card__header">
                <div class="license-card__icon" style="background-color: ${licenca.cor}40">${licenca.icone}</div>
                <div class="license-card__title">${licenca.nome}</div>
            </div>
            <div class="license-card__body">
                <p class="license-card__description">${licenca.descricao}</p>
                <div class="license-card__detail">${licenca.detalhe}</div>
            </div>
        `;
        
        licenseContainer.appendChild(licenseCard);
    });
}

// Renderizar os bancos de imagens
function renderBancosImagens() {
    const banksContainer = document.getElementById('banks-container');
    
    dadosApp.bancos_imagens.forEach(banco => {
        const bankCard = document.createElement('div');
        bankCard.className = 'bank-card';
        
        bankCard.innerHTML = `
            <div class="bank-card__header">
                <div class="bank-card__icon">${banco.icone}</div>
                <div class="bank-card__title">${banco.nome}</div>
            </div>
            <div class="bank-card__body">
                ${banco.imagem ? `<img src="${banco.imagem}" alt="Logo do ${banco.nome}" class="bank-card__image">` : ''}
                <p class="bank-card__description">${banco.descricao}</p>
                <p class="bank-card__license">${banco.licenca}</p>
                <button class="btn btn--primary bank-card__button">Visitar ${banco.nome}</button>
            </div>
        `;
        
        bankCard.querySelector('button').addEventListener('click', function() {
            alert(`Esta √© uma simula√ß√£o. Num site real, voc√™ seria redirecionado para ${banco.nome}.`);
        });
        
        banksContainer.appendChild(bankCard);
    });
}

// Renderizar as boas pr√°ticas
function renderPraticas() {
    const praticasContainer = document.getElementById('praticas-container');
    
    dadosApp.praticas.forEach(pratica => {
        const praticaItem = document.createElement('div');
        praticaItem.className = 'pratica-item';
        
        praticaItem.innerHTML = `
            <div class="pratica-icon">${pratica.icone}</div>
            <div class="pratica-content">
                <h4 class="pratica-title">${pratica.titulo}</h4>
                <p class="pratica-description">${pratica.descricao}</p>
            </div>
        `;
        
        praticasContainer.appendChild(praticaItem);
    });
}

// Configurar os acorde√µes
function setupAccordions() {
    const accordionHeaders = document.querySelectorAll('.accordion-header');
    
    accordionHeaders.forEach(header => {
        header.addEventListener('click', () => {
            // Toggle classe 'active' no header
            header.classList.toggle('active');
            
            // Toggle classe 'active' no conte√∫do
            const content = header.nextElementSibling;
            content.classList.toggle('active');
        });
    });
}

// Vari√°veis para o quiz
let perguntaAtual = 0;
let pontuacao = 0;
let perguntasRespondidas = 0;

// Inicializar o quiz
function initQuiz() {
    perguntaAtual = 0;
    pontuacao = 0;
    perguntasRespondidas = 0;
    
    // Mostrar a primeira pergunta
    mostrarPergunta();
    
    // Configurar o bot√£o de reiniciar o quiz
    document.getElementById('restart-quiz').addEventListener('click', () => {
        document.getElementById('quiz-results').style.display = 'none';
        initQuiz();
    });
}

// Mostrar a pergunta atual no quiz
function mostrarPergunta() {
    // Atualizar a barra de progresso
    atualizarProgresso();
    
    const quizContainer = document.getElementById('quiz-container');
    quizContainer.innerHTML = '';
    
    // Se todas as perguntas foram respondidas, mostrar resultados
    if (perguntaAtual >= dadosApp.perguntas_quiz.length) {
        mostrarResultados();
        return;
    }
    
    const pergunta = dadosApp.perguntas_quiz[perguntaAtual];
    
    // Criar o elemento de pergunta
    const questionElement = document.createElement('div');
    questionElement.className = 'card';
    questionElement.innerHTML = `
        <div class="card__body">
            <div class="quiz-question">
                <h3>${pergunta.pergunta}</h3>
                <div class="quiz-options" id="quiz-options-${perguntaAtual}">
                    ${pergunta.opcoes.map((opcao, index) => `
                        <div class="quiz-option" data-index="${index}">
                            <span>${opcao}</span>
                        </div>
                    `).join('')}
                </div>
                <div class="quiz-feedback" id="quiz-feedback-${perguntaAtual}"></div>
            </div>
            <div class="quiz-navigation">
                <button class="btn btn--secondary" id="btn-anterior" ${perguntaAtual === 0 ? 'disabled' : ''}>Anterior</button>
                <button class="btn btn--primary" id="btn-proximo" disabled>Pr√≥xima</button>
            </div>
        </div>
    `;
    
    quizContainer.appendChild(questionElement);
    
    // Adicionar event listeners √†s op√ß√µes
    const opcoesElements = document.querySelectorAll(`#quiz-options-${perguntaAtual} .quiz-option`);
    opcoesElements.forEach(opcao => {
        opcao.addEventListener('click', () => {
            // Desselecionar todas as op√ß√µes
            opcoesElements.forEach(opt => opt.classList.remove('selected'));
            
            // Selecionar a op√ß√£o clicada
            opcao.classList.add('selected');
            
            // Habilitar o bot√£o de pr√≥xima pergunta
            document.getElementById('btn-proximo').removeAttribute('disabled');
            
            // Verificar a resposta
            const opcaoIndex = parseInt(opcao.getAttribute('data-index'));
            const respostaCorreta = pergunta.resposta_correta;
            
            const feedbackElement = document.getElementById(`quiz-feedback-${perguntaAtual}`);
            
            if (opcaoIndex === respostaCorreta) {
                // Resposta correta
                opcoesElements.forEach(opt => opt.classList.remove('correct', 'incorrect'));
                opcao.classList.add('correct');
                feedbackElement.innerHTML = `<p><strong>Correto!</strong> ${pergunta.explicacao}</p>`;
                feedbackElement.className = 'quiz-feedback correct';
                pontuacao++;
            } else {
                // Resposta incorreta
                opcoesElements.forEach(opt => opt.classList.remove('correct', 'incorrect'));
                opcao.classList.add('incorrect');
                opcoesElements[respostaCorreta].classList.add('correct');
                feedbackElement.innerHTML = `<p><strong>Incorreto.</strong> ${pergunta.explicacao}</p>`;
                feedbackElement.className = 'quiz-feedback incorrect';
            }
            
            perguntasRespondidas++;
        });
    });
    
    // Configurar os bot√µes de navega√ß√£o
    document.getElementById('btn-anterior').addEventListener('click', () => {
        if (perguntaAtual > 0) {
            perguntaAtual--;
            mostrarPergunta();
        }
    });
    
    document.getElementById('btn-proximo').addEventListener('click', () => {
        perguntaAtual++;
        mostrarPergunta();
    });
}

// Atualizar a barra de progresso do quiz
function atualizarProgresso() {
    const totalPerguntas = dadosApp.perguntas_quiz.length;
    const percentual = (perguntaAtual / totalPerguntas) * 100;
    
    document.getElementById('quiz-progress').style.width = `${percentual}%`;
    document.getElementById('quiz-progress-text').textContent = `Pergunta ${perguntaAtual + 1} de ${totalPerguntas}`;
}

// Mostrar os resultados do quiz
function mostrarResultados() {
    const totalPerguntas = dadosApp.perguntas_quiz.length;
    const percentual = (pontuacao / totalPerguntas) * 100;
    
    // Atualizar a barra de progresso para 100%
    document.getElementById('quiz-progress').style.width = '100%';
    document.getElementById('quiz-progress-text').textContent = `Quiz completo`;
    
    // Mostrar a pontua√ß√£o
    document.getElementById('quiz-container').innerHTML = '';
    document.getElementById('quiz-results').style.display = 'block';
    
    let mensagem = '';
    if (percentual >= 90) {
        mensagem = 'Excelente! Voc√™ domina o tema dos direitos de imagem!';
    } else if (percentual >= 70) {
        mensagem = 'Muito bom! Voc√™ tem um bom conhecimento sobre direitos de imagem.';
    } else if (percentual >= 50) {
        mensagem = 'Bom trabalho! Voc√™ tem um conhecimento razo√°vel, mas pode melhorar.';
    } else {
        mensagem = 'Voc√™ precisa estudar mais sobre direitos de imagem. Reveja o conte√∫do!';
    }
    
    document.getElementById('results-content').innerHTML = `
        <div class="results-message">
            <div class="results-score">${pontuacao}/${totalPerguntas}</div>
            <div class="results-feedback">${mensagem}</div>
        </div>
        <p>Recomendamos que reveja as sec√ß√µes anteriores para aprofundar os seus conhecimentos sobre o uso correto de imagens na web.</p>
    `;
}